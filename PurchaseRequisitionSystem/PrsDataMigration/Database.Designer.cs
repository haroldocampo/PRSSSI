//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Approvals_ApprovalStatuses", "ApprovalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.ApprovalStatus), "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Approval), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Approvals_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.User), "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Approval), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_PurchaseRequests_OHApproval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.Approval), "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.PurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_PurchaseRequests_PMApproval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.Approval), "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.PurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_PurchaseRequests_PMHApproval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.Approval), "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.PurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_PurchaseRequests_VPApproval", "Approval", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.Approval), "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.PurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Branches_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Company), "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Branch), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Users_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Branch), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.User), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_CanvasSheets_PurchaseRequests", "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.PurchaseRequest), "CanvasSheet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.CanvasSheet), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.CanvasSheet), "mCS_mRfq_mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mCS_mRfq_mItemsRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_CostObjectives_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.Company), "CostObjective", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.CostObjective), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Departments_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Company), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Department), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Users_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.User), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.CostObjectiveCategory), "CostObjective", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.CostObjective), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mItemsRequests_CostObjectives", "CostObjective", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.CostObjective), "mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mItemsRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Users_Departments", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Department), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.User), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Items_ItemBrand", "ItemBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.ItemBrand), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Item), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Items_UnitOfMeasurements", "UnitOfMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.UnitOfMeasurement), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Item), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mItemsRequests_Items", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Item), "mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mItemsRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Users_Items", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PrsDataMigration.User), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.Item), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.mRfqs_mItemsRequests), "mCS_mRfq_mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mCS_mRfq_mItemsRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mItemsRequests_PurchaseRequests", "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.PurchaseRequest), "mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mItemsRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.mItemsRequest), "mRfqs_mItemsRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mRfqs_mItemsRequests), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.mRfqs_mItemsRequests), "mPo_mRfqItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mPo_mRfqItems), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.PurchaseOrder), "mPo_mRfqItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mPo_mRfqItems), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.RFQ), "mRfqs_mItemsRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mRfqs_mItemsRequests), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.PurchaseRequest), "mRfqs_mItemsRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.mRfqs_mItemsRequests), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_PurchaseRequests_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.User), "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.PurchaseRequest), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_RFQs_PurchaseRequests", "PurchaseRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.PurchaseRequest), "RFQ", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.RFQ), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_RFQs_Vendors", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.Vendor), "RFQ", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.RFQ), true)]
[assembly: EdmRelationshipAttribute("PrsEntites", "FK_Users_UserTypes", "UserType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PrsDataMigration.UserType), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PrsDataMigration.User), true)]

#endregion

namespace PrsDataMigration
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PrsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PrsEntities object using the connection string found in the 'PrsEntities' section of the application configuration file.
        /// </summary>
        public PrsEntities() : base("name=PrsEntities", "PrsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrsEntities object.
        /// </summary>
        public PrsEntities(string connectionString) : base(connectionString, "PrsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrsEntities object.
        /// </summary>
        public PrsEntities(EntityConnection connection) : base(connection, "PrsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Approval> Approvals
        {
            get
            {
                if ((_Approvals == null))
                {
                    _Approvals = base.CreateObjectSet<Approval>("Approvals");
                }
                return _Approvals;
            }
        }
        private ObjectSet<Approval> _Approvals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApprovalStatus> ApprovalStatuses
        {
            get
            {
                if ((_ApprovalStatuses == null))
                {
                    _ApprovalStatuses = base.CreateObjectSet<ApprovalStatus>("ApprovalStatuses");
                }
                return _ApprovalStatuses;
            }
        }
        private ObjectSet<ApprovalStatus> _ApprovalStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Branch> Branches
        {
            get
            {
                if ((_Branches == null))
                {
                    _Branches = base.CreateObjectSet<Branch>("Branches");
                }
                return _Branches;
            }
        }
        private ObjectSet<Branch> _Branches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CanvasSheet> CanvasSheets
        {
            get
            {
                if ((_CanvasSheets == null))
                {
                    _CanvasSheets = base.CreateObjectSet<CanvasSheet>("CanvasSheets");
                }
                return _CanvasSheets;
            }
        }
        private ObjectSet<CanvasSheet> _CanvasSheets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostObjectiveCategory> CostObjectiveCategories
        {
            get
            {
                if ((_CostObjectiveCategories == null))
                {
                    _CostObjectiveCategories = base.CreateObjectSet<CostObjectiveCategory>("CostObjectiveCategories");
                }
                return _CostObjectiveCategories;
            }
        }
        private ObjectSet<CostObjectiveCategory> _CostObjectiveCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostObjective> CostObjectives
        {
            get
            {
                if ((_CostObjectives == null))
                {
                    _CostObjectives = base.CreateObjectSet<CostObjective>("CostObjectives");
                }
                return _CostObjectives;
            }
        }
        private ObjectSet<CostObjective> _CostObjectives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemBrand> ItemBrands
        {
            get
            {
                if ((_ItemBrands == null))
                {
                    _ItemBrands = base.CreateObjectSet<ItemBrand>("ItemBrands");
                }
                return _ItemBrands;
            }
        }
        private ObjectSet<ItemBrand> _ItemBrands;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mCS_mRfq_mItemsRequest> mCS_mRfq_mItemsRequest
        {
            get
            {
                if ((_mCS_mRfq_mItemsRequest == null))
                {
                    _mCS_mRfq_mItemsRequest = base.CreateObjectSet<mCS_mRfq_mItemsRequest>("mCS_mRfq_mItemsRequest");
                }
                return _mCS_mRfq_mItemsRequest;
            }
        }
        private ObjectSet<mCS_mRfq_mItemsRequest> _mCS_mRfq_mItemsRequest;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mItemsRequest> mItemsRequests
        {
            get
            {
                if ((_mItemsRequests == null))
                {
                    _mItemsRequests = base.CreateObjectSet<mItemsRequest>("mItemsRequests");
                }
                return _mItemsRequests;
            }
        }
        private ObjectSet<mItemsRequest> _mItemsRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mPo_mRfqItems> mPo_mRfqItems
        {
            get
            {
                if ((_mPo_mRfqItems == null))
                {
                    _mPo_mRfqItems = base.CreateObjectSet<mPo_mRfqItems>("mPo_mRfqItems");
                }
                return _mPo_mRfqItems;
            }
        }
        private ObjectSet<mPo_mRfqItems> _mPo_mRfqItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mRfqs_mItemsRequests> mRfqs_mItemsRequests
        {
            get
            {
                if ((_mRfqs_mItemsRequests == null))
                {
                    _mRfqs_mItemsRequests = base.CreateObjectSet<mRfqs_mItemsRequests>("mRfqs_mItemsRequests");
                }
                return _mRfqs_mItemsRequests;
            }
        }
        private ObjectSet<mRfqs_mItemsRequests> _mRfqs_mItemsRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseRequest> PurchaseRequests
        {
            get
            {
                if ((_PurchaseRequests == null))
                {
                    _PurchaseRequests = base.CreateObjectSet<PurchaseRequest>("PurchaseRequests");
                }
                return _PurchaseRequests;
            }
        }
        private ObjectSet<PurchaseRequest> _PurchaseRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RFQ> RFQs
        {
            get
            {
                if ((_RFQs == null))
                {
                    _RFQs = base.CreateObjectSet<RFQ>("RFQs");
                }
                return _RFQs;
            }
        }
        private ObjectSet<RFQ> _RFQs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitOfMeasurement> UnitOfMeasurements
        {
            get
            {
                if ((_UnitOfMeasurements == null))
                {
                    _UnitOfMeasurements = base.CreateObjectSet<UnitOfMeasurement>("UnitOfMeasurements");
                }
                return _UnitOfMeasurements;
            }
        }
        private ObjectSet<UnitOfMeasurement> _UnitOfMeasurements;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserType> UserTypes
        {
            get
            {
                if ((_UserTypes == null))
                {
                    _UserTypes = base.CreateObjectSet<UserType>("UserTypes");
                }
                return _UserTypes;
            }
        }
        private ObjectSet<UserType> _UserTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Approvals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApprovals(Approval approval)
        {
            base.AddObject("Approvals", approval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApprovalStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApprovalStatuses(ApprovalStatus approvalStatus)
        {
            base.AddObject("ApprovalStatuses", approvalStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Branches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranches(Branch branch)
        {
            base.AddObject("Branches", branch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CanvasSheets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCanvasSheets(CanvasSheet canvasSheet)
        {
            base.AddObject("CanvasSheets", canvasSheet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostObjectiveCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostObjectiveCategories(CostObjectiveCategory costObjectiveCategory)
        {
            base.AddObject("CostObjectiveCategories", costObjectiveCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostObjectives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostObjectives(CostObjective costObjective)
        {
            base.AddObject("CostObjectives", costObjective);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemBrands EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemBrands(ItemBrand itemBrand)
        {
            base.AddObject("ItemBrands", itemBrand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mCS_mRfq_mItemsRequest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomCS_mRfq_mItemsRequest(mCS_mRfq_mItemsRequest mCS_mRfq_mItemsRequest)
        {
            base.AddObject("mCS_mRfq_mItemsRequest", mCS_mRfq_mItemsRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mItemsRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomItemsRequests(mItemsRequest mItemsRequest)
        {
            base.AddObject("mItemsRequests", mItemsRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mPo_mRfqItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomPo_mRfqItems(mPo_mRfqItems mPo_mRfqItems)
        {
            base.AddObject("mPo_mRfqItems", mPo_mRfqItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mRfqs_mItemsRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomRfqs_mItemsRequests(mRfqs_mItemsRequests mRfqs_mItemsRequests)
        {
            base.AddObject("mRfqs_mItemsRequests", mRfqs_mItemsRequests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseRequests(PurchaseRequest purchaseRequest)
        {
            base.AddObject("PurchaseRequests", purchaseRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RFQs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRFQs(RFQ rFQ)
        {
            base.AddObject("RFQs", rFQ);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitOfMeasurements EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitOfMeasurements(UnitOfMeasurement unitOfMeasurement)
        {
            base.AddObject("UnitOfMeasurements", unitOfMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTypes(UserType userType)
        {
            base.AddObject("UserTypes", userType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Approval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Approval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Approval object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="approvalUser">Initial value of the ApprovalUser property.</param>
        /// <param name="approvalStatusId">Initial value of the ApprovalStatusId property.</param>
        public static Approval CreateApproval(global::System.Guid id, global::System.Guid approvalUser, global::System.Int32 approvalStatusId)
        {
            Approval approval = new Approval();
            approval.Id = id;
            approval.ApprovalUser = approvalUser;
            approval.ApprovalStatusId = approvalStatusId;
            return approval;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApprovalUser
        {
            get
            {
                return _ApprovalUser;
            }
            set
            {
                OnApprovalUserChanging(value);
                ReportPropertyChanging("ApprovalUser");
                _ApprovalUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalUser");
                OnApprovalUserChanged();
            }
        }
        private global::System.Guid _ApprovalUser;
        partial void OnApprovalUserChanging(global::System.Guid value);
        partial void OnApprovalUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApprovalStatusId
        {
            get
            {
                return _ApprovalStatusId;
            }
            set
            {
                OnApprovalStatusIdChanging(value);
                ReportPropertyChanging("ApprovalStatusId");
                _ApprovalStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalStatusId");
                OnApprovalStatusIdChanged();
            }
        }
        private global::System.Int32 _ApprovalStatusId;
        partial void OnApprovalStatusIdChanging(global::System.Int32 value);
        partial void OnApprovalStatusIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Approvals_ApprovalStatuses", "ApprovalStatus")]
        public ApprovalStatus ApprovalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalStatus>("PrsEntites.FK_Approvals_ApprovalStatuses", "ApprovalStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalStatus>("PrsEntites.FK_Approvals_ApprovalStatuses", "ApprovalStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApprovalStatus> ApprovalStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApprovalStatus>("PrsEntites.FK_Approvals_ApprovalStatuses", "ApprovalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApprovalStatus>("PrsEntites.FK_Approvals_ApprovalStatuses", "ApprovalStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Approvals_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Approvals_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Approvals_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Approvals_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PrsEntites.FK_Approvals_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_OHApproval", "PurchaseRequest")]
        public EntityCollection<PurchaseRequest> PurchaseRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_OHApproval", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_OHApproval", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_PMApproval", "PurchaseRequest")]
        public EntityCollection<PurchaseRequest> PurchaseRequests1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_PMApproval", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_PMApproval", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_PMHApproval", "PurchaseRequest")]
        public EntityCollection<PurchaseRequest> PurchaseRequests2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_PMHApproval", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_PMHApproval", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_VPApproval", "PurchaseRequest")]
        public EntityCollection<PurchaseRequest> PurchaseRequests3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_VPApproval", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_VPApproval", "PurchaseRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="ApprovalStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApprovalStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApprovalStatus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ApprovalStatus CreateApprovalStatus(global::System.Int32 id, global::System.String status)
        {
            ApprovalStatus approvalStatus = new ApprovalStatus();
            approvalStatus.Id = id;
            approvalStatus.Status = status;
            return approvalStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Approvals_ApprovalStatuses", "Approval")]
        public EntityCollection<Approval> Approvals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Approval>("PrsEntites.FK_Approvals_ApprovalStatuses", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Approval>("PrsEntites.FK_Approvals_ApprovalStatuses", "Approval", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Branch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Branch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Branch object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Branch CreateBranch(global::System.Int32 id, global::System.String name, global::System.Int32 companyId)
        {
            Branch branch = new Branch();
            branch.Id = id;
            branch.Name = name;
            branch.CompanyId = companyId;
            return branch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Branches_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Branches_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Branches_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Branches_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("PrsEntites.FK_Branches_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Branches", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PrsEntites.FK_Users_Branches", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PrsEntites.FK_Users_Branches", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="CanvasSheet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CanvasSheet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CanvasSheet object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="csNumber">Initial value of the CsNumber property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="is_approved">Initial value of the is_approved property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        public static CanvasSheet CreateCanvasSheet(global::System.Guid id, global::System.Int32 csNumber, global::System.DateTime dateCreated, global::System.Boolean is_approved, global::System.Guid requestId)
        {
            CanvasSheet canvasSheet = new CanvasSheet();
            canvasSheet.Id = id;
            canvasSheet.CsNumber = csNumber;
            canvasSheet.DateCreated = dateCreated;
            canvasSheet.is_approved = is_approved;
            canvasSheet.RequestId = requestId;
            return canvasSheet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CsNumber
        {
            get
            {
                return _CsNumber;
            }
            set
            {
                OnCsNumberChanging(value);
                ReportPropertyChanging("CsNumber");
                _CsNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CsNumber");
                OnCsNumberChanged();
            }
        }
        private global::System.Int32 _CsNumber;
        partial void OnCsNumberChanging(global::System.Int32 value);
        partial void OnCsNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Terms
        {
            get
            {
                return _Terms;
            }
            set
            {
                OnTermsChanging(value);
                ReportPropertyChanging("Terms");
                _Terms = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Terms");
                OnTermsChanged();
            }
        }
        private Nullable<global::System.Int32> _Terms;
        partial void OnTermsChanging(Nullable<global::System.Int32> value);
        partial void OnTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeliveryLeadtime
        {
            get
            {
                return _DeliveryLeadtime;
            }
            set
            {
                OnDeliveryLeadtimeChanging(value);
                ReportPropertyChanging("DeliveryLeadtime");
                _DeliveryLeadtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryLeadtime");
                OnDeliveryLeadtimeChanged();
            }
        }
        private Nullable<global::System.Int32> _DeliveryLeadtime;
        partial void OnDeliveryLeadtimeChanging(Nullable<global::System.Int32> value);
        partial void OnDeliveryLeadtimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PreparedBy
        {
            get
            {
                return _PreparedBy;
            }
            set
            {
                OnPreparedByChanging(value);
                ReportPropertyChanging("PreparedBy");
                _PreparedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreparedBy");
                OnPreparedByChanged();
            }
        }
        private Nullable<global::System.Guid> _PreparedBy;
        partial void OnPreparedByChanging(Nullable<global::System.Guid> value);
        partial void OnPreparedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Guid> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_approved
        {
            get
            {
                return _is_approved;
            }
            set
            {
                Onis_approvedChanging(value);
                ReportPropertyChanging("is_approved");
                _is_approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_approved");
                Onis_approvedChanged();
            }
        }
        private global::System.Boolean _is_approved;
        partial void Onis_approvedChanging(global::System.Boolean value);
        partial void Onis_approvedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Guid _RequestId;
        partial void OnRequestIdChanging(global::System.Guid value);
        partial void OnRequestIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CanvasSheets_PurchaseRequests", "PurchaseRequest")]
        public PurchaseRequest PurchaseRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "PurchaseRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "PurchaseRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseRequest> PurchaseRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseRequest>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_CanvasSheets", "mCS_mRfq_mItemsRequest")]
        public EntityCollection<mCS_mRfq_mItemsRequest> mCS_mRfq_mItemsRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mCS_mRfq_mItemsRequest>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "mCS_mRfq_mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mCS_mRfq_mItemsRequest>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "mCS_mRfq_mItemsRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String name)
        {
            Company company = new Company();
            company.Id = id;
            company.Name = name;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Branches_Companies", "Branch")]
        public EntityCollection<Branch> Branches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Branch>("PrsEntites.FK_Branches_Companies", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Branch>("PrsEntites.FK_Branches_Companies", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CostObjectives_Companies", "CostObjective")]
        public EntityCollection<CostObjective> CostObjectives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CostObjective>("PrsEntites.FK_CostObjectives_Companies", "CostObjective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CostObjective>("PrsEntites.FK_CostObjectives_Companies", "CostObjective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Departments_Companies", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("PrsEntites.FK_Departments_Companies", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("PrsEntites.FK_Departments_Companies", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Companies", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PrsEntites.FK_Users_Companies", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PrsEntites.FK_Users_Companies", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="CostObjective")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostObjective : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostObjective object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static CostObjective CreateCostObjective(global::System.Int32 id, global::System.String name, global::System.Int32 categoryId)
        {
            CostObjective costObjective = new CostObjective();
            costObjective.Id = id;
            costObjective.Name = name;
            costObjective.CategoryId = categoryId;
            return costObjective;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CostObjectives_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_CostObjectives_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_CostObjectives_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_CostObjectives_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("PrsEntites.FK_CostObjectives_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory")]
        public CostObjectiveCategory CostObjectiveCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjectiveCategory>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjectiveCategory>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostObjectiveCategory> CostObjectiveCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjectiveCategory>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostObjectiveCategory>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjectiveCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_CostObjectives", "mItemsRequest")]
        public EntityCollection<mItemsRequest> mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_CostObjectives", "mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_CostObjectives", "mItemsRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="CostObjectiveCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostObjectiveCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostObjectiveCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static CostObjectiveCategory CreateCostObjectiveCategory(global::System.Int32 id, global::System.String name)
        {
            CostObjectiveCategory costObjectiveCategory = new CostObjectiveCategory();
            costObjectiveCategory.Id = id;
            costObjectiveCategory.Name = name;
            return costObjectiveCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CostObjectives_CostObjectiveCategories", "CostObjective")]
        public EntityCollection<CostObjective> CostObjectives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CostObjective>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CostObjective>("PrsEntites.FK_CostObjectives_CostObjectiveCategories", "CostObjective", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name, global::System.Int32 companyId)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            department.CompanyId = companyId;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Departments_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Departments_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Departments_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Departments_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("PrsEntites.FK_Departments_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Departments", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PrsEntites.FK_Users_Departments", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PrsEntites.FK_Users_Departments", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="itemNumber">Initial value of the ItemNumber property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="codeSize">Initial value of the CodeSize property.</param>
        public static Item CreateItem(global::System.Guid id, global::System.Int32 itemNumber, global::System.String description, global::System.String codeSize)
        {
            Item item = new Item();
            item.Id = id;
            item.ItemNumber = itemNumber;
            item.Description = description;
            item.CodeSize = codeSize;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemNumber
        {
            get
            {
                return _ItemNumber;
            }
            set
            {
                OnItemNumberChanging(value);
                ReportPropertyChanging("ItemNumber");
                _ItemNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemNumber");
                OnItemNumberChanged();
            }
        }
        private global::System.Int32 _ItemNumber;
        partial void OnItemNumberChanging(global::System.Int32 value);
        partial void OnItemNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CodeSize
        {
            get
            {
                return _CodeSize;
            }
            set
            {
                OnCodeSizeChanging(value);
                ReportPropertyChanging("CodeSize");
                _CodeSize = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CodeSize");
                OnCodeSizeChanged();
            }
        }
        private global::System.String _CodeSize;
        partial void OnCodeSizeChanging(global::System.String value);
        partial void OnCodeSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RemainingStock
        {
            get
            {
                return _RemainingStock;
            }
            set
            {
                OnRemainingStockChanging(value);
                ReportPropertyChanging("RemainingStock");
                _RemainingStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainingStock");
                OnRemainingStockChanged();
            }
        }
        private Nullable<global::System.Int32> _RemainingStock;
        partial void OnRemainingStockChanging(Nullable<global::System.Int32> value);
        partial void OnRemainingStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemBrandId
        {
            get
            {
                return _ItemBrandId;
            }
            set
            {
                OnItemBrandIdChanging(value);
                ReportPropertyChanging("ItemBrandId");
                _ItemBrandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemBrandId");
                OnItemBrandIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemBrandId;
        partial void OnItemBrandIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemBrandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ItemUOMId
        {
            get
            {
                return _ItemUOMId;
            }
            set
            {
                OnItemUOMIdChanging(value);
                ReportPropertyChanging("ItemUOMId");
                _ItemUOMId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemUOMId");
                OnItemUOMIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ItemUOMId;
        partial void OnItemUOMIdChanging(Nullable<global::System.Int32> value);
        partial void OnItemUOMIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_created;
        partial void Ondate_createdChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is_active
        {
            get
            {
                return _is_active;
            }
            set
            {
                Onis_activeChanging(value);
                ReportPropertyChanging("is_active");
                _is_active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_active");
                Onis_activeChanged();
            }
        }
        private Nullable<global::System.Boolean> _is_active;
        partial void Onis_activeChanging(Nullable<global::System.Boolean> value);
        partial void Onis_activeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> created_by
        {
            get
            {
                return _created_by;
            }
            set
            {
                Oncreated_byChanging(value);
                ReportPropertyChanging("created_by");
                _created_by = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_by");
                Oncreated_byChanged();
            }
        }
        private Nullable<global::System.Guid> _created_by;
        partial void Oncreated_byChanging(Nullable<global::System.Guid> value);
        partial void Oncreated_byChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastPurchasedDate
        {
            get
            {
                return _LastPurchasedDate;
            }
            set
            {
                OnLastPurchasedDateChanging(value);
                ReportPropertyChanging("LastPurchasedDate");
                _LastPurchasedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPurchasedDate");
                OnLastPurchasedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastPurchasedDate;
        partial void OnLastPurchasedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastPurchasedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> LastPurchasePrice
        {
            get
            {
                return _LastPurchasePrice;
            }
            set
            {
                OnLastPurchasePriceChanging(value);
                ReportPropertyChanging("LastPurchasePrice");
                _LastPurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPurchasePrice");
                OnLastPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Double> _LastPurchasePrice;
        partial void OnLastPurchasePriceChanging(Nullable<global::System.Double> value);
        partial void OnLastPurchasePriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Items_ItemBrand", "ItemBrand")]
        public ItemBrand ItemBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrand>("PrsEntites.FK_Items_ItemBrand", "ItemBrand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrand>("PrsEntites.FK_Items_ItemBrand", "ItemBrand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemBrand> ItemBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemBrand>("PrsEntites.FK_Items_ItemBrand", "ItemBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemBrand>("PrsEntites.FK_Items_ItemBrand", "ItemBrand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Items_UnitOfMeasurements", "UnitOfMeasurement")]
        public UnitOfMeasurement UnitOfMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasurement>("PrsEntites.FK_Items_UnitOfMeasurements", "UnitOfMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasurement>("PrsEntites.FK_Items_UnitOfMeasurements", "UnitOfMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitOfMeasurement> UnitOfMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitOfMeasurement>("PrsEntites.FK_Items_UnitOfMeasurements", "UnitOfMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitOfMeasurement>("PrsEntites.FK_Items_UnitOfMeasurements", "UnitOfMeasurement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_Items", "mItemsRequest")]
        public EntityCollection<mItemsRequest> mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_Items", "mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_Items", "mItemsRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Items", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Users_Items", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Users_Items", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_Users_Items", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PrsEntites.FK_Users_Items", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="ItemBrand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemBrand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemBrand object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ItemBrand CreateItemBrand(global::System.Int32 id, global::System.String name)
        {
            ItemBrand itemBrand = new ItemBrand();
            itemBrand.Id = id;
            itemBrand.Name = name;
            return itemBrand;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Items_ItemBrand", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("PrsEntites.FK_Items_ItemBrand", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("PrsEntites.FK_Items_ItemBrand", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="mCS_mRfq_mItemsRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mCS_mRfq_mItemsRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mCS_mRfq_mItemsRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="canvasSheetId">Initial value of the CanvasSheetId property.</param>
        /// <param name="mRfqs_mItemsRequestsId">Initial value of the mRfqs_mItemsRequestsId property.</param>
        /// <param name="isSelected">Initial value of the IsSelected property.</param>
        /// <param name="vendorNumber">Initial value of the VendorNumber property.</param>
        public static mCS_mRfq_mItemsRequest CreatemCS_mRfq_mItemsRequest(global::System.Int32 id, global::System.Guid canvasSheetId, global::System.Int32 mRfqs_mItemsRequestsId, global::System.Boolean isSelected, global::System.Int32 vendorNumber)
        {
            mCS_mRfq_mItemsRequest mCS_mRfq_mItemsRequest = new mCS_mRfq_mItemsRequest();
            mCS_mRfq_mItemsRequest.Id = id;
            mCS_mRfq_mItemsRequest.CanvasSheetId = canvasSheetId;
            mCS_mRfq_mItemsRequest.mRfqs_mItemsRequestsId = mRfqs_mItemsRequestsId;
            mCS_mRfq_mItemsRequest.IsSelected = isSelected;
            mCS_mRfq_mItemsRequest.VendorNumber = vendorNumber;
            return mCS_mRfq_mItemsRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CanvasSheetId
        {
            get
            {
                return _CanvasSheetId;
            }
            set
            {
                OnCanvasSheetIdChanging(value);
                ReportPropertyChanging("CanvasSheetId");
                _CanvasSheetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanvasSheetId");
                OnCanvasSheetIdChanged();
            }
        }
        private global::System.Guid _CanvasSheetId;
        partial void OnCanvasSheetIdChanging(global::System.Guid value);
        partial void OnCanvasSheetIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 mRfqs_mItemsRequestsId
        {
            get
            {
                return _mRfqs_mItemsRequestsId;
            }
            set
            {
                OnmRfqs_mItemsRequestsIdChanging(value);
                ReportPropertyChanging("mRfqs_mItemsRequestsId");
                _mRfqs_mItemsRequestsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mRfqs_mItemsRequestsId");
                OnmRfqs_mItemsRequestsIdChanged();
            }
        }
        private global::System.Int32 _mRfqs_mItemsRequestsId;
        partial void OnmRfqs_mItemsRequestsIdChanging(global::System.Int32 value);
        partial void OnmRfqs_mItemsRequestsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private global::System.Boolean _IsSelected;
        partial void OnIsSelectedChanging(global::System.Boolean value);
        partial void OnIsSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorNumber
        {
            get
            {
                return _VendorNumber;
            }
            set
            {
                OnVendorNumberChanging(value);
                ReportPropertyChanging("VendorNumber");
                _VendorNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorNumber");
                OnVendorNumberChanged();
            }
        }
        private global::System.Int32 _VendorNumber;
        partial void OnVendorNumberChanging(global::System.Int32 value);
        partial void OnVendorNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet")]
        public CanvasSheet CanvasSheet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CanvasSheet>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CanvasSheet>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CanvasSheet> CanvasSheetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CanvasSheet>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CanvasSheet>("PrsEntites.FK_mCS_mRfq_mItemsRequest_CanvasSheets", "CanvasSheet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests")]
        public mRfqs_mItemsRequests mRfqs_mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mRfqs_mItemsRequests> mRfqs_mItemsRequestsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mRfqs_mItemsRequests", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="mItemsRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mItemsRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mItemsRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="isQuoteSent">Initial value of the IsQuoteSent property.</param>
        /// <param name="stockOnHand">Initial value of the StockOnHand property.</param>
        /// <param name="costObjectiveId">Initial value of the CostObjectiveId property.</param>
        public static mItemsRequest CreatemItemsRequest(global::System.Int32 id, global::System.Guid requestId, global::System.Guid itemId, global::System.Int32 quantity, global::System.Boolean isQuoteSent, global::System.Int32 stockOnHand, global::System.Int32 costObjectiveId)
        {
            mItemsRequest mItemsRequest = new mItemsRequest();
            mItemsRequest.Id = id;
            mItemsRequest.RequestId = requestId;
            mItemsRequest.ItemId = itemId;
            mItemsRequest.Quantity = quantity;
            mItemsRequest.IsQuoteSent = isQuoteSent;
            mItemsRequest.StockOnHand = stockOnHand;
            mItemsRequest.CostObjectiveId = costObjectiveId;
            return mItemsRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Guid _RequestId;
        partial void OnRequestIdChanging(global::System.Guid value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Guid _ItemId;
        partial void OnItemIdChanging(global::System.Guid value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Double> _Price;
        partial void OnPriceChanging(Nullable<global::System.Double> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsQuoteSent
        {
            get
            {
                return _IsQuoteSent;
            }
            set
            {
                OnIsQuoteSentChanging(value);
                ReportPropertyChanging("IsQuoteSent");
                _IsQuoteSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsQuoteSent");
                OnIsQuoteSentChanged();
            }
        }
        private global::System.Boolean _IsQuoteSent;
        partial void OnIsQuoteSentChanging(global::System.Boolean value);
        partial void OnIsQuoteSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReceivedQuantity
        {
            get
            {
                return _ReceivedQuantity;
            }
            set
            {
                OnReceivedQuantityChanging(value);
                ReportPropertyChanging("ReceivedQuantity");
                _ReceivedQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedQuantity");
                OnReceivedQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _ReceivedQuantity;
        partial void OnReceivedQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnReceivedQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockOnHand
        {
            get
            {
                return _StockOnHand;
            }
            set
            {
                OnStockOnHandChanging(value);
                ReportPropertyChanging("StockOnHand");
                _StockOnHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StockOnHand");
                OnStockOnHandChanged();
            }
        }
        private global::System.Int32 _StockOnHand;
        partial void OnStockOnHandChanging(global::System.Int32 value);
        partial void OnStockOnHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostObjectiveId
        {
            get
            {
                return _CostObjectiveId;
            }
            set
            {
                OnCostObjectiveIdChanging(value);
                ReportPropertyChanging("CostObjectiveId");
                _CostObjectiveId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostObjectiveId");
                OnCostObjectiveIdChanged();
            }
        }
        private global::System.Int32 _CostObjectiveId;
        partial void OnCostObjectiveIdChanging(global::System.Int32 value);
        partial void OnCostObjectiveIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrInvoiceNumber
        {
            get
            {
                return _DrInvoiceNumber;
            }
            set
            {
                OnDrInvoiceNumberChanging(value);
                ReportPropertyChanging("DrInvoiceNumber");
                _DrInvoiceNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrInvoiceNumber");
                OnDrInvoiceNumberChanged();
            }
        }
        private global::System.String _DrInvoiceNumber;
        partial void OnDrInvoiceNumberChanging(global::System.String value);
        partial void OnDrInvoiceNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_CostObjectives", "CostObjective")]
        public CostObjective CostObjective
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjective>("PrsEntites.FK_mItemsRequests_CostObjectives", "CostObjective").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjective>("PrsEntites.FK_mItemsRequests_CostObjectives", "CostObjective").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostObjective> CostObjectiveReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostObjective>("PrsEntites.FK_mItemsRequests_CostObjectives", "CostObjective");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostObjective>("PrsEntites.FK_mItemsRequests_CostObjectives", "CostObjective", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_Items", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("PrsEntites.FK_mItemsRequests_Items", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("PrsEntites.FK_mItemsRequests_Items", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("PrsEntites.FK_mItemsRequests_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("PrsEntites.FK_mItemsRequests_Items", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_PurchaseRequests", "PurchaseRequest")]
        public PurchaseRequest PurchaseRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "PurchaseRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "PurchaseRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseRequest> PurchaseRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mItemsRequests", "mRfqs_mItemsRequests")]
        public EntityCollection<mRfqs_mItemsRequests> mRfqs_mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mRfqs_mItemsRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mRfqs_mItemsRequests", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="mPo_mRfqItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mPo_mRfqItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mPo_mRfqItems object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="purchaseOrderId">Initial value of the PurchaseOrderId property.</param>
        /// <param name="mRfqs_mItemsRequestsId">Initial value of the mRfqs_mItemsRequestsId property.</param>
        public static mPo_mRfqItems CreatemPo_mRfqItems(global::System.Guid id, global::System.Guid purchaseOrderId, global::System.Int32 mRfqs_mItemsRequestsId)
        {
            mPo_mRfqItems mPo_mRfqItems = new mPo_mRfqItems();
            mPo_mRfqItems.Id = id;
            mPo_mRfqItems.PurchaseOrderId = purchaseOrderId;
            mPo_mRfqItems.mRfqs_mItemsRequestsId = mRfqs_mItemsRequestsId;
            return mPo_mRfqItems;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PurchaseOrderId
        {
            get
            {
                return _PurchaseOrderId;
            }
            set
            {
                OnPurchaseOrderIdChanging(value);
                ReportPropertyChanging("PurchaseOrderId");
                _PurchaseOrderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseOrderId");
                OnPurchaseOrderIdChanged();
            }
        }
        private global::System.Guid _PurchaseOrderId;
        partial void OnPurchaseOrderIdChanging(global::System.Guid value);
        partial void OnPurchaseOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 mRfqs_mItemsRequestsId
        {
            get
            {
                return _mRfqs_mItemsRequestsId;
            }
            set
            {
                OnmRfqs_mItemsRequestsIdChanging(value);
                ReportPropertyChanging("mRfqs_mItemsRequestsId");
                _mRfqs_mItemsRequestsId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mRfqs_mItemsRequestsId");
                OnmRfqs_mItemsRequestsIdChanged();
            }
        }
        private global::System.Int32 _mRfqs_mItemsRequestsId;
        partial void OnmRfqs_mItemsRequestsIdChanging(global::System.Int32 value);
        partial void OnmRfqs_mItemsRequestsIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests")]
        public mRfqs_mItemsRequests mRfqs_mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mRfqs_mItemsRequests> mRfqs_mItemsRequestsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mRfqs_mItemsRequests>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mRfqs_mItemsRequests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "PurchaseOrder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="mRfqs_mItemsRequests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mRfqs_mItemsRequests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mRfqs_mItemsRequests object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="rfqId">Initial value of the RfqId property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="mItemsRequestId">Initial value of the mItemsRequestId property.</param>
        public static mRfqs_mItemsRequests CreatemRfqs_mItemsRequests(global::System.Int32 id, global::System.Guid rfqId, global::System.Guid requestId, global::System.Int32 mItemsRequestId)
        {
            mRfqs_mItemsRequests mRfqs_mItemsRequests = new mRfqs_mItemsRequests();
            mRfqs_mItemsRequests.Id = id;
            mRfqs_mItemsRequests.RfqId = rfqId;
            mRfqs_mItemsRequests.RequestId = requestId;
            mRfqs_mItemsRequests.mItemsRequestId = mItemsRequestId;
            return mRfqs_mItemsRequests;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RfqId
        {
            get
            {
                return _RfqId;
            }
            set
            {
                OnRfqIdChanging(value);
                ReportPropertyChanging("RfqId");
                _RfqId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RfqId");
                OnRfqIdChanged();
            }
        }
        private global::System.Guid _RfqId;
        partial void OnRfqIdChanging(global::System.Guid value);
        partial void OnRfqIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Guid _RequestId;
        partial void OnRequestIdChanging(global::System.Guid value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 mItemsRequestId
        {
            get
            {
                return _mItemsRequestId;
            }
            set
            {
                OnmItemsRequestIdChanging(value);
                ReportPropertyChanging("mItemsRequestId");
                _mItemsRequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("mItemsRequestId");
                OnmItemsRequestIdChanged();
            }
        }
        private global::System.Int32 _mItemsRequestId;
        partial void OnmItemsRequestIdChanging(global::System.Int32 value);
        partial void OnmItemsRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TotalPrice
        {
            get
            {
                return _TotalPrice;
            }
            set
            {
                OnTotalPriceChanging(value);
                ReportPropertyChanging("TotalPrice");
                _TotalPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPrice");
                OnTotalPriceChanged();
            }
        }
        private Nullable<global::System.Double> _TotalPrice;
        partial void OnTotalPriceChanging(Nullable<global::System.Double> value);
        partial void OnTotalPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private Nullable<global::System.Double> _UnitPrice;
        partial void OnUnitPriceChanging(Nullable<global::System.Double> value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Double> value);
        partial void OnDiscountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mCS_mRfq_mItemsRequest")]
        public EntityCollection<mCS_mRfq_mItemsRequest> mCS_mRfq_mItemsRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mCS_mRfq_mItemsRequest>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mCS_mRfq_mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mCS_mRfq_mItemsRequest>("PrsEntites.FK_mCS_mRfq_mItemsRequest_mRfqs_mItemsRequests", "mCS_mRfq_mItemsRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest")]
        public mItemsRequest mItemsRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mItemsRequest>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mItemsRequest>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mItemsRequest> mItemsRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mItemsRequest>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mItemsRequest>("PrsEntites.FK_mRfqs_mItemsRequests_mItemsRequests", "mItemsRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mPo_mRfqItems")]
        public EntityCollection<mPo_mRfqItems> mPo_mRfqItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mPo_mRfqItems>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mPo_mRfqItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mPo_mRfqItems>("PrsEntites.FK_mPo_mRfqItems_mRfqs_mItemsRequests", "mPo_mRfqItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ")]
        public RFQ RFQ
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RFQ> RFQReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RFQ>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RFQ>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "RFQ", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest")]
        public PurchaseRequest PurchaseRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseRequest> PurchaseRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseRequest>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "PurchaseRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="poNumber">Initial value of the PoNumber property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="is_approved">Initial value of the is_approved property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Guid id, global::System.Int32 poNumber, global::System.Guid requestId, global::System.Int32 vendorId, global::System.DateTime dateCreated, global::System.Boolean is_approved)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.Id = id;
            purchaseOrder.PoNumber = poNumber;
            purchaseOrder.RequestId = requestId;
            purchaseOrder.VendorId = vendorId;
            purchaseOrder.DateCreated = dateCreated;
            purchaseOrder.is_approved = is_approved;
            return purchaseOrder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PoNumber
        {
            get
            {
                return _PoNumber;
            }
            set
            {
                OnPoNumberChanging(value);
                ReportPropertyChanging("PoNumber");
                _PoNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PoNumber");
                OnPoNumberChanged();
            }
        }
        private global::System.Int32 _PoNumber;
        partial void OnPoNumberChanging(global::System.Int32 value);
        partial void OnPoNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Guid _RequestId;
        partial void OnRequestIdChanging(global::System.Guid value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeliveryDate
        {
            get
            {
                return _DeliveryDate;
            }
            set
            {
                OnDeliveryDateChanging(value);
                ReportPropertyChanging("DeliveryDate");
                _DeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeliveryDate");
                OnDeliveryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeliveryDate;
        partial void OnDeliveryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> GrandTotal
        {
            get
            {
                return _GrandTotal;
            }
            set
            {
                OnGrandTotalChanging(value);
                ReportPropertyChanging("GrandTotal");
                _GrandTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrandTotal");
                OnGrandTotalChanged();
            }
        }
        private Nullable<global::System.Double> _GrandTotal;
        partial void OnGrandTotalChanging(Nullable<global::System.Double> value);
        partial void OnGrandTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PreparedBy
        {
            get
            {
                return _PreparedBy;
            }
            set
            {
                OnPreparedByChanging(value);
                ReportPropertyChanging("PreparedBy");
                _PreparedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreparedBy");
                OnPreparedByChanged();
            }
        }
        private Nullable<global::System.Guid> _PreparedBy;
        partial void OnPreparedByChanging(Nullable<global::System.Guid> value);
        partial void OnPreparedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Guid> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Guid> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean is_approved
        {
            get
            {
                return _is_approved;
            }
            set
            {
                Onis_approvedChanging(value);
                ReportPropertyChanging("is_approved");
                _is_approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is_approved");
                Onis_approvedChanged();
            }
        }
        private global::System.Boolean _is_approved;
        partial void Onis_approvedChanging(global::System.Boolean value);
        partial void Onis_approvedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mPo_mRfqItems_PurchaseOrders", "mPo_mRfqItems")]
        public EntityCollection<mPo_mRfqItems> mPo_mRfqItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mPo_mRfqItems>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "mPo_mRfqItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mPo_mRfqItems>("PrsEntites.FK_mPo_mRfqItems_PurchaseOrders", "mPo_mRfqItems", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="PurchaseRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pRNo">Initial value of the PRNo property.</param>
        /// <param name="requestedBy">Initial value of the RequestedBy property.</param>
        /// <param name="isPoReady">Initial value of the IsPoReady property.</param>
        /// <param name="isQuoted">Initial value of the IsQuoted property.</param>
        /// <param name="isFinished">Initial value of the IsFinished property.</param>
        /// <param name="isCanvased">Initial value of the IsCanvased property.</param>
        /// <param name="dateRequired">Initial value of the DateRequired property.</param>
        public static PurchaseRequest CreatePurchaseRequest(global::System.Guid id, global::System.Int32 pRNo, global::System.Guid requestedBy, global::System.Boolean isPoReady, global::System.Boolean isQuoted, global::System.Boolean isFinished, global::System.Boolean isCanvased, global::System.DateTime dateRequired)
        {
            PurchaseRequest purchaseRequest = new PurchaseRequest();
            purchaseRequest.Id = id;
            purchaseRequest.PRNo = pRNo;
            purchaseRequest.RequestedBy = requestedBy;
            purchaseRequest.IsPoReady = isPoReady;
            purchaseRequest.IsQuoted = isQuoted;
            purchaseRequest.IsFinished = isFinished;
            purchaseRequest.IsCanvased = isCanvased;
            purchaseRequest.DateRequired = dateRequired;
            return purchaseRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PRNoModel
        {
            get
            {
                return _PRNoModel;
            }
            set
            {
                OnPRNoModelChanging(value);
                ReportPropertyChanging("PRNoModel");
                _PRNoModel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PRNoModel");
                OnPRNoModelChanged();
            }
        }
        private global::System.String _PRNoModel;
        partial void OnPRNoModelChanging(global::System.String value);
        partial void OnPRNoModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PRNo
        {
            get
            {
                return _PRNo;
            }
            set
            {
                OnPRNoChanging(value);
                ReportPropertyChanging("PRNo");
                _PRNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRNo");
                OnPRNoChanged();
            }
        }
        private global::System.Int32 _PRNo;
        partial void OnPRNoChanging(global::System.Int32 value);
        partial void OnPRNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestedBy
        {
            get
            {
                return _RequestedBy;
            }
            set
            {
                OnRequestedByChanging(value);
                ReportPropertyChanging("RequestedBy");
                _RequestedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestedBy");
                OnRequestedByChanged();
            }
        }
        private global::System.Guid _RequestedBy;
        partial void OnRequestedByChanging(global::System.Guid value);
        partial void OnRequestedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OHApprovalId
        {
            get
            {
                return _OHApprovalId;
            }
            set
            {
                OnOHApprovalIdChanging(value);
                ReportPropertyChanging("OHApprovalId");
                _OHApprovalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OHApprovalId");
                OnOHApprovalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _OHApprovalId;
        partial void OnOHApprovalIdChanging(Nullable<global::System.Guid> value);
        partial void OnOHApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PMHApprovalId
        {
            get
            {
                return _PMHApprovalId;
            }
            set
            {
                OnPMHApprovalIdChanging(value);
                ReportPropertyChanging("PMHApprovalId");
                _PMHApprovalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMHApprovalId");
                OnPMHApprovalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PMHApprovalId;
        partial void OnPMHApprovalIdChanging(Nullable<global::System.Guid> value);
        partial void OnPMHApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> VPApprovalId
        {
            get
            {
                return _VPApprovalId;
            }
            set
            {
                OnVPApprovalIdChanging(value);
                ReportPropertyChanging("VPApprovalId");
                _VPApprovalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VPApprovalId");
                OnVPApprovalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _VPApprovalId;
        partial void OnVPApprovalIdChanging(Nullable<global::System.Guid> value);
        partial void OnVPApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PMApprovalId
        {
            get
            {
                return _PMApprovalId;
            }
            set
            {
                OnPMApprovalIdChanging(value);
                ReportPropertyChanging("PMApprovalId");
                _PMApprovalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMApprovalId");
                OnPMApprovalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PMApprovalId;
        partial void OnPMApprovalIdChanging(Nullable<global::System.Guid> value);
        partial void OnPMApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPoReady
        {
            get
            {
                return _IsPoReady;
            }
            set
            {
                OnIsPoReadyChanging(value);
                ReportPropertyChanging("IsPoReady");
                _IsPoReady = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPoReady");
                OnIsPoReadyChanged();
            }
        }
        private global::System.Boolean _IsPoReady;
        partial void OnIsPoReadyChanging(global::System.Boolean value);
        partial void OnIsPoReadyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsQuoted
        {
            get
            {
                return _IsQuoted;
            }
            set
            {
                OnIsQuotedChanging(value);
                ReportPropertyChanging("IsQuoted");
                _IsQuoted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsQuoted");
                OnIsQuotedChanged();
            }
        }
        private global::System.Boolean _IsQuoted;
        partial void OnIsQuotedChanging(global::System.Boolean value);
        partial void OnIsQuotedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFinished
        {
            get
            {
                return _IsFinished;
            }
            set
            {
                OnIsFinishedChanging(value);
                ReportPropertyChanging("IsFinished");
                _IsFinished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFinished");
                OnIsFinishedChanged();
            }
        }
        private global::System.Boolean _IsFinished;
        partial void OnIsFinishedChanging(global::System.Boolean value);
        partial void OnIsFinishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCanvased
        {
            get
            {
                return _IsCanvased;
            }
            set
            {
                OnIsCanvasedChanging(value);
                ReportPropertyChanging("IsCanvased");
                _IsCanvased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCanvased");
                OnIsCanvasedChanged();
            }
        }
        private global::System.Boolean _IsCanvased;
        partial void OnIsCanvasedChanging(global::System.Boolean value);
        partial void OnIsCanvasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PRType_IsStock
        {
            get
            {
                return _PRType_IsStock;
            }
            set
            {
                OnPRType_IsStockChanging(value);
                ReportPropertyChanging("PRType_IsStock");
                _PRType_IsStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRType_IsStock");
                OnPRType_IsStockChanged();
            }
        }
        private Nullable<global::System.Boolean> _PRType_IsStock;
        partial void OnPRType_IsStockChanging(Nullable<global::System.Boolean> value);
        partial void OnPRType_IsStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRequired
        {
            get
            {
                return _DateRequired;
            }
            set
            {
                OnDateRequiredChanging(value);
                ReportPropertyChanging("DateRequired");
                _DateRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRequired");
                OnDateRequiredChanged();
            }
        }
        private global::System.DateTime _DateRequired;
        partial void OnDateRequiredChanging(global::System.DateTime value);
        partial void OnDateRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> created_at
        {
            get
            {
                return _created_at;
            }
            set
            {
                Oncreated_atChanging(value);
                ReportPropertyChanging("created_at");
                _created_at = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("created_at");
                Oncreated_atChanged();
            }
        }
        private Nullable<global::System.DateTime> _created_at;
        partial void Oncreated_atChanging(Nullable<global::System.DateTime> value);
        partial void Oncreated_atChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_OHApproval", "Approval")]
        public Approval Approval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_OHApproval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_OHApproval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> ApprovalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_OHApproval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_OHApproval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_PMApproval", "Approval")]
        public Approval Approval1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMApproval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMApproval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> Approval1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMApproval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMApproval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_PMHApproval", "Approval")]
        public Approval Approval2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMHApproval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMHApproval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> Approval2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMHApproval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_PMHApproval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_VPApproval", "Approval")]
        public Approval Approval3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_VPApproval", "Approval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_VPApproval", "Approval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Approval> Approval3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_VPApproval", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Approval>("PrsEntites.FK_PurchaseRequests_VPApproval", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_CanvasSheets_PurchaseRequests", "CanvasSheet")]
        public EntityCollection<CanvasSheet> CanvasSheets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CanvasSheet>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "CanvasSheet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CanvasSheet>("PrsEntites.FK_CanvasSheets_PurchaseRequests", "CanvasSheet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mItemsRequests_PurchaseRequests", "mItemsRequest")]
        public EntityCollection<mItemsRequest> mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "mItemsRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mItemsRequest>("PrsEntites.FK_mItemsRequests_PurchaseRequests", "mItemsRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_PurchaseRequests", "mRfqs_mItemsRequests")]
        public EntityCollection<mRfqs_mItemsRequests> mRfqs_mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "mRfqs_mItemsRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_PurchaseRequests", "mRfqs_mItemsRequests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_PurchaseRequests_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_PurchaseRequests_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PrsEntites.FK_PurchaseRequests_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PrsEntites.FK_PurchaseRequests_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_RFQs_PurchaseRequests", "RFQ")]
        public EntityCollection<RFQ> RFQs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ>("PrsEntites.FK_RFQs_PurchaseRequests", "RFQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ>("PrsEntites.FK_RFQs_PurchaseRequests", "RFQ", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="RFQ")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RFQ : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RFQ object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="rfqNumber">Initial value of the RfqNumber property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="issuedBy">Initial value of the IssuedBy property.</param>
        /// <param name="dateRequired">Initial value of the DateRequired property.</param>
        /// <param name="date_created">Initial value of the date_created property.</param>
        /// <param name="isQuoted">Initial value of the IsQuoted property.</param>
        public static RFQ CreateRFQ(global::System.Guid id, global::System.Guid requestId, global::System.Int32 rfqNumber, global::System.Int32 vendorId, global::System.Guid issuedBy, global::System.DateTime dateRequired, global::System.DateTime date_created, global::System.Boolean isQuoted)
        {
            RFQ rFQ = new RFQ();
            rFQ.Id = id;
            rFQ.RequestId = requestId;
            rFQ.RfqNumber = rfqNumber;
            rFQ.VendorId = vendorId;
            rFQ.IssuedBy = issuedBy;
            rFQ.DateRequired = dateRequired;
            rFQ.date_created = date_created;
            rFQ.IsQuoted = isQuoted;
            return rFQ;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Guid _RequestId;
        partial void OnRequestIdChanging(global::System.Guid value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RfqNumber
        {
            get
            {
                return _RfqNumber;
            }
            set
            {
                OnRfqNumberChanging(value);
                ReportPropertyChanging("RfqNumber");
                _RfqNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RfqNumber");
                OnRfqNumberChanged();
            }
        }
        private global::System.Int32 _RfqNumber;
        partial void OnRfqNumberChanging(global::System.Int32 value);
        partial void OnRfqNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssuedBy
        {
            get
            {
                return _IssuedBy;
            }
            set
            {
                OnIssuedByChanging(value);
                ReportPropertyChanging("IssuedBy");
                _IssuedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedBy");
                OnIssuedByChanged();
            }
        }
        private global::System.Guid _IssuedBy;
        partial void OnIssuedByChanging(global::System.Guid value);
        partial void OnIssuedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRequired
        {
            get
            {
                return _DateRequired;
            }
            set
            {
                OnDateRequiredChanging(value);
                ReportPropertyChanging("DateRequired");
                _DateRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateRequired");
                OnDateRequiredChanged();
            }
        }
        private global::System.DateTime _DateRequired;
        partial void OnDateRequiredChanging(global::System.DateTime value);
        partial void OnDateRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date_created
        {
            get
            {
                return _date_created;
            }
            set
            {
                Ondate_createdChanging(value);
                ReportPropertyChanging("date_created");
                _date_created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_created");
                Ondate_createdChanged();
            }
        }
        private global::System.DateTime _date_created;
        partial void Ondate_createdChanging(global::System.DateTime value);
        partial void Ondate_createdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsQuoted
        {
            get
            {
                return _IsQuoted;
            }
            set
            {
                OnIsQuotedChanging(value);
                ReportPropertyChanging("IsQuoted");
                _IsQuoted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsQuoted");
                OnIsQuotedChanged();
            }
        }
        private global::System.Boolean _IsQuoted;
        partial void OnIsQuotedChanging(global::System.Boolean value);
        partial void OnIsQuotedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "mRfqs_mItemsRequests")]
        public EntityCollection<mRfqs_mItemsRequests> mRfqs_mItemsRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "mRfqs_mItemsRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mRfqs_mItemsRequests>("PrsEntites.FK_mRfqs_mItemsRequests_mRfqs_mItemsRequests", "mRfqs_mItemsRequests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_RFQs_PurchaseRequests", "PurchaseRequest")]
        public PurchaseRequest PurchaseRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_RFQs_PurchaseRequests", "PurchaseRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_RFQs_PurchaseRequests", "PurchaseRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseRequest> PurchaseRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseRequest>("PrsEntites.FK_RFQs_PurchaseRequests", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseRequest>("PrsEntites.FK_RFQs_PurchaseRequests", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_RFQs_Vendors", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PrsEntites.FK_RFQs_Vendors", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PrsEntites.FK_RFQs_Vendors", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PrsEntites.FK_RFQs_Vendors", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("PrsEntites.FK_RFQs_Vendors", "Vendor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="UnitOfMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitOfMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitOfMeasurement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UnitOfMeasurement CreateUnitOfMeasurement(global::System.Int32 id, global::System.String name)
        {
            UnitOfMeasurement unitOfMeasurement = new UnitOfMeasurement();
            unitOfMeasurement.Id = id;
            unitOfMeasurement.Name = name;
            return unitOfMeasurement;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Items_UnitOfMeasurements", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("PrsEntites.FK_Items_UnitOfMeasurements", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("PrsEntites.FK_Items_UnitOfMeasurements", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="branchId">Initial value of the BranchId property.</param>
        /// <param name="userTypeId">Initial value of the UserTypeId property.</param>
        public static User CreateUser(global::System.Guid id, global::System.String username, global::System.String password, global::System.Int32 companyId, global::System.Int32 departmentId, global::System.Int32 branchId, global::System.Int32 userTypeId)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Password = password;
            user.CompanyId = companyId;
            user.DepartmentId = departmentId;
            user.BranchId = branchId;
            user.UserTypeId = userTypeId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private global::System.Int32 _BranchId;
        partial void OnBranchIdChanging(global::System.Int32 value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressStreet
        {
            get
            {
                return _AddressStreet;
            }
            set
            {
                OnAddressStreetChanging(value);
                ReportPropertyChanging("AddressStreet");
                _AddressStreet = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressStreet");
                OnAddressStreetChanged();
            }
        }
        private global::System.String _AddressStreet;
        partial void OnAddressStreetChanging(global::System.String value);
        partial void OnAddressStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressCity
        {
            get
            {
                return _AddressCity;
            }
            set
            {
                OnAddressCityChanging(value);
                ReportPropertyChanging("AddressCity");
                _AddressCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressCity");
                OnAddressCityChanged();
            }
        }
        private global::System.String _AddressCity;
        partial void OnAddressCityChanging(global::System.String value);
        partial void OnAddressCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressZip
        {
            get
            {
                return _AddressZip;
            }
            set
            {
                OnAddressZipChanging(value);
                ReportPropertyChanging("AddressZip");
                _AddressZip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddressZip");
                OnAddressZipChanged();
            }
        }
        private global::System.String _AddressZip;
        partial void OnAddressZipChanging(global::System.String value);
        partial void OnAddressZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserTypeId
        {
            get
            {
                return _UserTypeId;
            }
            set
            {
                OnUserTypeIdChanging(value);
                ReportPropertyChanging("UserTypeId");
                _UserTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserTypeId");
                OnUserTypeIdChanged();
            }
        }
        private global::System.Int32 _UserTypeId;
        partial void OnUserTypeIdChanging(global::System.Int32 value);
        partial void OnUserTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Approvals_Users", "Approval")]
        public EntityCollection<Approval> Approvals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Approval>("PrsEntites.FK_Approvals_Users", "Approval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Approval>("PrsEntites.FK_Approvals_Users", "Approval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("PrsEntites.FK_Users_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("PrsEntites.FK_Users_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("PrsEntites.FK_Users_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("PrsEntites.FK_Users_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Users_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Users_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("PrsEntites.FK_Users_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("PrsEntites.FK_Users_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Departments", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("PrsEntites.FK_Users_Departments", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("PrsEntites.FK_Users_Departments", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("PrsEntites.FK_Users_Departments", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("PrsEntites.FK_Users_Departments", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_Items", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("PrsEntites.FK_Users_Items", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("PrsEntites.FK_Users_Items", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_PurchaseRequests_Users", "PurchaseRequest")]
        public EntityCollection<PurchaseRequest> PurchaseRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_Users", "PurchaseRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseRequest>("PrsEntites.FK_PurchaseRequests_Users", "PurchaseRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_UserTypes", "UserType")]
        public UserType UserType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("PrsEntites.FK_Users_UserTypes", "UserType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("PrsEntites.FK_Users_UserTypes", "UserType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserType> UserTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserType>("PrsEntites.FK_Users_UserTypes", "UserType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserType>("PrsEntites.FK_Users_UserTypes", "UserType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="UserType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userType1">Initial value of the UserType1 property.</param>
        /// <param name="accessLevel">Initial value of the AccessLevel property.</param>
        public static UserType CreateUserType(global::System.Int32 id, global::System.String userType1, global::System.Int32 accessLevel)
        {
            UserType userType = new UserType();
            userType.Id = id;
            userType.UserType1 = userType1;
            userType.AccessLevel = accessLevel;
            return userType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserType1
        {
            get
            {
                return _UserType1;
            }
            set
            {
                OnUserType1Changing(value);
                ReportPropertyChanging("UserType1");
                _UserType1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserType1");
                OnUserType1Changed();
            }
        }
        private global::System.String _UserType1;
        partial void OnUserType1Changing(global::System.String value);
        partial void OnUserType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessLevel
        {
            get
            {
                return _AccessLevel;
            }
            set
            {
                OnAccessLevelChanging(value);
                ReportPropertyChanging("AccessLevel");
                _AccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessLevel");
                OnAccessLevelChanged();
            }
        }
        private global::System.Int32 _AccessLevel;
        partial void OnAccessLevelChanging(global::System.Int32 value);
        partial void OnAccessLevelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_Users_UserTypes", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PrsEntites.FK_Users_UserTypes", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PrsEntites.FK_Users_UserTypes", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrsEntites", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Vendor CreateVendor(global::System.Int32 id, global::System.String name)
        {
            Vendor vendor = new Vendor();
            vendor.Id = id;
            vendor.Name = name;
            return vendor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TIN
        {
            get
            {
                return _TIN;
            }
            set
            {
                OnTINChanging(value);
                ReportPropertyChanging("TIN");
                _TIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TIN");
                OnTINChanged();
            }
        }
        private global::System.String _TIN;
        partial void OnTINChanging(global::System.String value);
        partial void OnTINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Terms
        {
            get
            {
                return _Terms;
            }
            set
            {
                OnTermsChanging(value);
                ReportPropertyChanging("Terms");
                _Terms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Terms");
                OnTermsChanged();
            }
        }
        private global::System.String _Terms;
        partial void OnTermsChanging(global::System.String value);
        partial void OnTermsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Telephone
        {
            get
            {
                return _Telephone;
            }
            set
            {
                OnTelephoneChanging(value);
                ReportPropertyChanging("Telephone");
                _Telephone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Telephone");
                OnTelephoneChanged();
            }
        }
        private global::System.String _Telephone;
        partial void OnTelephoneChanging(global::System.String value);
        partial void OnTelephoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrsEntites", "FK_RFQs_Vendors", "RFQ")]
        public EntityCollection<RFQ> RFQs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RFQ>("PrsEntites.FK_RFQs_Vendors", "RFQ");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RFQ>("PrsEntites.FK_RFQs_Vendors", "RFQ", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
